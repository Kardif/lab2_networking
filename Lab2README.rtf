{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Jared Headings.235\
Joshua Brown.4213\
CSE 3461 - Peng\
Lab 2 Write-up\
\

\b Implementation Description:\
\

\b0 Our UDP sender/receiver is built on a socket format, and the sender sends the file requested by the receiver through datagrams (packets) sent through the socket connection. We used the header format:\
\
	SEQ_NUM x\
	SEQ_TOTAL y\
\
In our format, x is some number between 0 and y, and y is the total number of datagrams being sent to transmit the file. The receiver then iteratively puts the datagrams together in the new file in order from 0 to y to piece together the transmitted file.\
\
Our sender reports messages for the opening of the file, the filename requested by the receiver, the size of the file, the file contents of the requested file, a file sent message, and a file closed message. \
\
Our receiver reports messages for each datagram being sent, specifically, the SEQ_NUM x and the contents of the datagram corresponding to that SEQ_NUM.\
\
\

\b Difficulties:\
\

\b0 We experienced several difficulties in this lab, specifically with memory in C. Our project was plagued with segmentation faults while working on it, which it is still not 100% free of. Due to very busy schedules, we haven\'92t been able to put the time this project requires into it, which has yielded a project that isn\'92t quite perfect, is rough around the edges, but still has some working components. We do have code in place for packet loss (simulated with a random probability value) and rdt 3.0 ACKing, however our timeout code is not in place (our code is simulating rdt 2.2 a bit more?).}